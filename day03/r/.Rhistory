plot(myfit,xlab=seq(0,1,.1))
plot(myfit,y=seq(0,1,.1))
x <- c(1:100)
y <- seq(0.1,10,0.1)
plot(y~x^3)
plot(y~I(x^3))
?I
sum((190*(1-.25)),(186*(1-.3939394)), (179*(1-.2810457)),(187*(1-.2919255)))/
sum(190,186,179,187)
weighted.spec=
sum((190*(1-.25)),(186*(1-.3939394)), (179*(1-.2810457)),(187*(1-.2919255)))/
sum(190,186,179,187)
weighted.spec=
sum((190*(.7857143)),(186*(.7142857)), (179*(.7307692)),(187*(.7692308)))/
sum(190,186,179,187)
weighted.sens=
sum((190*(.7857143)),(186*(.7142857)), (179*(.7307692)),(187*(.7692308)))/
sum(190,186,179,187)
weighted.sens
weighted.spec=
sum((190*(1-.25)),(186*(1-.3939394)), (179*(1-.2810457)),(187*(1-.2919255)))/
sum(190,186,179,187)
weighted.spec
joes.weighted.spec = 0.6975
weighted.sens=
sum((190*(.7857143)),(186*(.7142857)), (179*(.7307692)),(187*(.7692308)))/
sum(190,186,179,187)
weighted.sens
x <- y <- 5
x
y
x = y = 5
x
y
x = y <- 5
x
y
x <- y = 5
qnorm()
8+9+10+12+15+13
qgamma(p, 6, 93.5, lower.tail = TRUE,
log.p = FALSE)
qgamma(1/10, 6, 93.5, lower.tail = TRUE,
log.p = FALSE)
1-qgamma(1/10, 6, 93.5, lower.tail = TRUE,
log.p = FALSE)
16+8+114+60+4+23+30+105
pgamma(q=1/10, shape=6, rate=93.5)
16+8+114+60+4+23+30+105
setwd("C:/Users/harric17/Desktop/advent_of_code/advent_of_code_2015/day03/r")
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
#I was having weird memory issues so I saved the dataframe to disk
#saveRDS(allpositions,"part2.rds")
rm(list=ls())
allpositions=readRDS("part2.rds")
#Lets plot the path
santa=allpositions %>% filter(who=="SANTA")
robot=allpositions %>% filter(who=="ROBOT")
theorigin=head(allpositions,1)
santafinal=tail(santa,1)
robotfinal=tail(robot,1)
png(filename="path_pt2.png")
ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_path() +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green") +
geom_point(aes(x = x, y = y), santafinal, size=5,color = "red") +
geom_point(aes(x = x, y = y), robotfinal, size=5,color = "blue")
dev.off()
nrow(allpositions)/2
p=ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_point(size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order)+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
p
p
animate(p
# ,nframes=(nrow(allpositions)/2)+10
# ,fps=100
,end_pause = 10
,renderer=gifski_renderer("thepath_pt2.gif")
)
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
santaposition=data.frame(who="SANTA",x=0,y=0,order=0)
roboposition=data.frame(who="ROBOT",x=0,y=0,order=0)
allpositions=rbind(santaposition,roboposition)
cnt=1
for(i in myvec){
#print(i)
if(cnt %% 2==1){#odd
if(i=="^"){santaposition[["y"]]=santaposition[["y"]]+1}
else if(i==">"){santaposition[["x"]]=santaposition[["x"]]+1}
else if(i=="v"){santaposition[["y"]]=santaposition[["y"]]-1}
else if(i=="<"){santaposition[["x"]]=santaposition[["x"]]-1}
santaposition$order=cnt
}else{
if(i=="^"){roboposition[["y"]]=roboposition[["y"]]+1}
else if(i==">"){roboposition[["x"]]=roboposition[["x"]]+1}
else if(i=="v"){roboposition[["y"]]=roboposition[["y"]]-1}
else if(i=="<"){roboposition[["x"]]=roboposition[["x"]]-1}
roboposition$order=cnt
}
allpositions=rbind(allpositions,santaposition,roboposition)
cnt=cnt+1
}
allpositions %>% select(-order) %>% distinct() %>% nrow() #part 2 solution
#I was having weird memory issues so I saved the dataframe to disk
#saveRDS(allpositions,"part2.rds")
# rm(list=ls())
# allpositions=readRDS("part2.rds")
#Lets plot the path
santa=allpositions %>% filter(who=="SANTA")
robot=allpositions %>% filter(who=="ROBOT")
theorigin=head(allpositions,1)
santafinal=tail(santa,1)
robotfinal=tail(robot,1)
png(filename="path_pt2.png")
ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_path() +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green") +
geom_point(aes(x = x, y = y), santafinal, size=5,color = "red") +
geom_point(aes(x = x, y = y), robotfinal, size=5,color = "blue")
dev.off()
#Lets do an animated gif of the path
p=ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_point(size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order)+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
animate(p
# ,nframes=(nrow(allpositions)/2)+10
# ,fps=100
,end_pause = 10
,renderer=gifski_renderer("thepath_pt2.gif")
)
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
position=allpositions=data.frame(x=0,y=0)
cnt=0
for(i in myvec){
#print(i)
if(i=="^"){position[["y"]]=position[["y"]]+1}
else if(i==">"){position[["x"]]=position[["x"]]+1}
else if(i=="v"){position[["y"]]=position[["y"]]-1}
else if(i=="<"){position[["x"]]=position[["x"]]-1}
allpositions=rbind(allpositions,position)
cnt=cnt+1
}
nrow(distinct(allpositions)) #part 1 solution
#Lets plot the path
png(filename="path_pt1.png")
plot(x=allpositions,type="S",pch = 20,cex=.01)
points(x=0,y=0,col="green",pch=19,cex=1.5)
points(tail(allpositions,1),col="red",pch=19,cex=1.5)
dev.off()
#Lets do an animated gif od the path
#This took a long time to render, maybe 30min
#I also used an online tool to speed up the gif
allpositions = allpositions %>% mutate(order=row_number())
theorigin=allpositions[1,]
p=ggplot(data=allpositions,
aes(x=x, y=y)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_line() +
transition_reveal(along = order)+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
out=animate(p,
# nframes=nrow(allpositions)+10,
# fps=100,
end_pause = 10,
renderer=gifski_renderer("thepath_pt1.gif")
)
p=ggplot(data=allpositions,
aes(x=x, y=y,group=who)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_line() +
transition_reveal(along = order)
p=p+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
p
allpositions
p=ggplot(data=allpositions,
aes(x=x, y=y)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_line() +
transition_reveal(along = order)
p=p+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
p
p=ggplot(data=allpositions,
aes(x=x, y=y)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order) +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
p
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
position=allpositions=data.frame(x=0,y=0)
cnt=0
for(i in myvec){
#print(i)
if(i=="^"){position[["y"]]=position[["y"]]+1}
else if(i==">"){position[["x"]]=position[["x"]]+1}
else if(i=="v"){position[["y"]]=position[["y"]]-1}
else if(i=="<"){position[["x"]]=position[["x"]]-1}
allpositions=rbind(allpositions,position)
cnt=cnt+1
}
nrow(distinct(allpositions)) #part 1 solution
#Lets plot the path
png(filename="path_pt1.png")
plot(x=allpositions,type="S",pch = 20,cex=.01)
points(x=0,y=0,col="green",pch=19,cex=1.5)
points(tail(allpositions,1),col="red",pch=19,cex=1.5)
dev.off()
#Lets do an animated gif of the path
allpositions = allpositions %>% mutate(order=row_number())
theorigin=allpositions[1,]
p=ggplot(data=allpositions,
aes(x=x, y=y)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order) +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
out=animate(p,
# nframes=nrow(allpositions)+10,
# fps=100,
end_pause = 20,
renderer=gifski_renderer("thepath_pt1.gif")
)
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
santaposition=data.frame(who="SANTA",x=0,y=0,order=0)
roboposition=data.frame(who="ROBOT",x=0,y=0,order=0)
allpositions=rbind(santaposition,roboposition)
cnt=1
for(i in myvec){
#print(i)
if(cnt %% 2==1){#odd
if(i=="^"){santaposition[["y"]]=santaposition[["y"]]+1}
else if(i==">"){santaposition[["x"]]=santaposition[["x"]]+1}
else if(i=="v"){santaposition[["y"]]=santaposition[["y"]]-1}
else if(i=="<"){santaposition[["x"]]=santaposition[["x"]]-1}
santaposition$order=cnt
}else{
if(i=="^"){roboposition[["y"]]=roboposition[["y"]]+1}
else if(i==">"){roboposition[["x"]]=roboposition[["x"]]+1}
else if(i=="v"){roboposition[["y"]]=roboposition[["y"]]-1}
else if(i=="<"){roboposition[["x"]]=roboposition[["x"]]-1}
roboposition$order=cnt
}
allpositions=rbind(allpositions,santaposition,roboposition)
cnt=cnt+1
}
allpositions %>% select(-order) %>% distinct() %>% nrow() #part 2 solution
###
#Lets plot the path
###
santa=allpositions %>% filter(who=="SANTA")
robot=allpositions %>% filter(who=="ROBOT")
theorigin=head(allpositions,1)
santafinal=tail(santa,1)
robotfinal=tail(robot,1)
png(filename="path_pt2.png")
ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_path() +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green") +
geom_point(aes(x = x, y = y), santafinal, size=5,color = "red") +
geom_point(aes(x = x, y = y), robotfinal, size=5,color = "blue")
dev.off()
###
#Lets do an animated gif of the path
###
p=ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_point(size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order)+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
animate(p
# ,nframes=(nrow(allpositions)/2)+10
# ,fps=100
,end_pause = 20
,renderer=gifski_renderer("thepath_pt2.gif")
)
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
position=allpositions=data.frame(x=0,y=0)
cnt=0
for(i in myvec){
#print(i)
if(i=="^"){position[["y"]]=position[["y"]]+1}
else if(i==">"){position[["x"]]=position[["x"]]+1}
else if(i=="v"){position[["y"]]=position[["y"]]-1}
else if(i=="<"){position[["x"]]=position[["x"]]-1}
allpositions=rbind(allpositions,position)
cnt=cnt+1
}
nrow(distinct(allpositions)) #part 1 solution
#Lets plot the path
png(filename="path_pt1.png")
plot(x=allpositions,type="S",pch = 20,cex=.01)
points(x=0,y=0,col="green",pch=19,cex=1.5)
points(tail(allpositions,1),col="red",pch=19,cex=1.5)
dev.off()
#Lets do an animated gif of the path
allpositions = allpositions %>% mutate(order=row_number())
theorigin=allpositions[1,]
p=ggplot(data=allpositions,
aes(x=x, y=y)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order) +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
out=animate(p,
# nframes=nrow(allpositions)+10,
# fps=100,
end_pause = 20,
renderer=gifski_renderer("path_pt1.gif")
)
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
position=allpositions=data.frame(x=0,y=0)
cnt=0
for(i in myvec){
#print(i)
if(i=="^"){position[["y"]]=position[["y"]]+1}
else if(i==">"){position[["x"]]=position[["x"]]+1}
else if(i=="v"){position[["y"]]=position[["y"]]-1}
else if(i=="<"){position[["x"]]=position[["x"]]-1}
allpositions=rbind(allpositions,position)
cnt=cnt+1
}
nrow(distinct(allpositions)) #part 1 solution
#Lets plot the path
png(filename="path_pt1.png")
plot(x=allpositions,type="S",pch = 20,cex=.01)
points(x=0,y=0,col="green",pch=19,cex=1.5)
points(tail(allpositions,1),col="red",pch=19,cex=1.5)
dev.off()
#Lets do an animated gif of the path
allpositions = allpositions %>% mutate(order=row_number())
theorigin=allpositions[1,]
p=ggplot(data=allpositions,
aes(x=x, y=y)) +
geom_point(color="red",size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order) +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
out=animate(p,
# nframes=nrow(allpositions)+10,
# fps=100,
end_pause = 50,
renderer=gifski_renderer("path_pt1.gif")
)
animate(p
# ,nframes=nrow(allpositions)+10
,nframe=200
# ,fps=100
,end_pause = 30,
,renderer=gifski_renderer("path_pt1.gif")
)
library(dplyr)
library(stringr)
library(ggplot2)
library(gganimate)
library(gifski)
rm(list=ls())
input = read.csv("../input.txt",header=FALSE,stringsAsFactors = FALSE)
myvec=c()#I originally did this so I could write out a csv that could be imported by scratch
for(i in 1:nchar(input)){
#print(substr(input,i,i))
myvec = c(myvec,substr(input,i,i))
}
santaposition=data.frame(who="SANTA",x=0,y=0,order=0)
roboposition=data.frame(who="ROBOT",x=0,y=0,order=0)
allpositions=rbind(santaposition,roboposition)
cnt=1
for(i in myvec){
#print(i)
if(cnt %% 2==1){#odd
if(i=="^"){santaposition[["y"]]=santaposition[["y"]]+1}
else if(i==">"){santaposition[["x"]]=santaposition[["x"]]+1}
else if(i=="v"){santaposition[["y"]]=santaposition[["y"]]-1}
else if(i=="<"){santaposition[["x"]]=santaposition[["x"]]-1}
santaposition$order=cnt
}else{
if(i=="^"){roboposition[["y"]]=roboposition[["y"]]+1}
else if(i==">"){roboposition[["x"]]=roboposition[["x"]]+1}
else if(i=="v"){roboposition[["y"]]=roboposition[["y"]]-1}
else if(i=="<"){roboposition[["x"]]=roboposition[["x"]]-1}
roboposition$order=cnt
}
allpositions=rbind(allpositions,santaposition,roboposition)
cnt=cnt+1
}
allpositions %>% select(-order) %>% distinct() %>% nrow() #part 2 solution
###
#Lets plot the path
###
santa=allpositions %>% filter(who=="SANTA")
robot=allpositions %>% filter(who=="ROBOT")
theorigin=head(allpositions,1)
santafinal=tail(santa,1)
robotfinal=tail(robot,1)
png(filename="path_pt2.png")
ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_path() +
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green") +
geom_point(aes(x = x, y = y), santafinal, size=5,color = "red") +
geom_point(aes(x = x, y = y), robotfinal, size=5,color = "blue")
dev.off()
###
#Lets do an animated gif of the path
###
p=ggplot(data=allpositions,
aes(x=x, y=y,color=who,group=who)) +
geom_point(size=5) +
transition_time(order) +
geom_path() +
transition_reveal(along = order)+
geom_point(aes(x = x, y = y), theorigin, size=5,color = "green")
animate(p
# ,nframes=(nrow(allpositions)/2)+10
,nframe=200
# ,fps=100
,end_pause = 30
,renderer=gifski_renderer("path_pt2.gif")
)
